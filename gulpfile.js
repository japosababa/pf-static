var gulp = require('gulp');var gulpSass = require('gulp-sass');var autoprefixer = require("gulp-autoprefixer");var browserSync = require('browser-sync').create();var useref = require('gulp-useref');var uglify = require('gulp-uglify');var gulpIf = require('gulp-if');var cssnano = require('gulp-cssnano');var imagemin = require('gulp-imagemin');var cache = require('gulp-cache');var del = require('del');var runSequence = require('run-sequence');var panini = require('panini');// DEVELOPMENTgulp.task('sass', function () {    return gulp.src('src/scss/app.scss')        .pipe(gulpSass())        .on('error', onError)        .pipe(autoprefixer({            browsers: ['last 2 versions', 'ie >= 9']        }))        .pipe(gulp.dest('src/css'))        .pipe(browserSync.reload({            stream: true        }))});function onError(err) {    console.log(err);    this.emit('end');}gulp.task('browser sync', function () {    browserSync.init({        server: {            baseDir: 'src/'        }    })});gulp.task('pages', function() {    gulp.src('src/templates/**/*.html')        .pipe(panini({            root: 'src/templates/',            layouts: 'src/layouts/',            partials: 'src/partials/',            data: 'src/data/'        }))        .pipe(gulp.dest('src/'));});gulp.task('run', ['sass', 'pages', 'browser sync'], function () {    gulp.watch('src/scss/**/*.scss', ['sass']);    gulp.watch('src/layouts/**/*.html', ['pages', panini.refresh]);    gulp.watch('src/partials/**/*.html', ['pages', panini.refresh]);    gulp.watch('src/templates/**/*.html', ['pages', panini.refresh]);    gulp.watch('src/data/**/*.json', ['pages', panini.refresh]);    gulp.watch('src/*.html', browserSync.reload);    gulp.watch('src/js/**/*.js', browserSync.reload);});// BUILDgulp.task('clean', function() {    return del.sync('dist');});gulp.task('useref', function () {    return gulp.src('src/*.html')        .pipe(useref())        .pipe(gulpIf('*.js', uglify()))        .pipe(gulpIf('*.css', cssnano()))        .pipe(gulp.dest('dist'))});gulp.task('images', function () {    return gulp.src('src/img/**/*.+(png|jpg|gif|svg)')        .pipe(cache(imagemin()))        .pipe(gulp.dest('dist/img'))});gulp.task('fonts', function() {    return gulp.src('src/fonts/**/*')        .pipe(gulp.dest('dist/fonts'))});gulp.task('build', function (callback) {    runSequence('clean', 'sass', 'pages', ['useref', 'images', 'fonts'], callback)});